+ source /root/mugen/libs/locallibs/common_lib.sh
++ python3 --version
++ '[' 0 -eq 0 ']'
++ source /root/mugen/libs/locallibs/common_lib_python.sh
+ source ./common/lib/util.sh
+ main
++ type -t post_test
+ '[' -n function ']'
+ trap post_test EXIT INT HUP TERM
+ rpm -qa
+ grep expect
++ type -t config_params
+ '[' -n '' ']'
++ type -t pre_test
+ '[' -n function ']'
+ pre_test
+ LOG_INFO 'Start to prepare the test environment.'
+ message='Start to prepare the test environment.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'Start to prepare the test environment.'
Wed Jun 28 13:56:19 2023 - INFO  - Start to prepare the test environment.
+ DNF_INSTALL 'rubygem-fluentd tar'
+ pkgs='rubygem-fluentd tar'
+ node=1
+ '[' -z '' ']'
+ tmpfile=
++ python3 /root/mugen/libs/locallibs/rpm_manage.py install --pkgs 'rubygem-fluentd tar' --node 1 --tempfile ''
+ tmpfile2=/tmp/tmp0mxodk37
+ '[' -z '' ']'
+ tmpfile=/tmp/tmp0mxodk37
+ extract_data
+ [[ -f ./common/data.tar.gz ]]
+ tar -xvf ./common/data.tar.gz
+ LOG_INFO 'End to prepare the test environment.'
+ message='End to prepare the test environment.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'End to prepare the test environment.'
Wed Jun 28 13:56:38 2023 - INFO  - End to prepare the test environment.
++ type -t run_test
+ '[' -n function ']'
+ run_test
+ LOG_INFO 'Start to run test.'
+ message='Start to run test.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'Start to run test.'
Wed Jun 28 13:56:38 2023 - INFO  - Start to run test.
+ fluent-plugin-config-format -h
+ grep 'Output plugin config definitions'
Output plugin config definitions
+ CHECK_RESULT 0 0 0 'Check fluent-plugin-config-format -h failed'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Check fluent-plugin-config-format -h failed'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ fluent-plugin-config-format output null
+ grep '#### chunk_keys'
#### chunk_keys () (optional)
+ CHECK_RESULT 0 0 0 'Check fluent-plugin-config-format failed'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Check fluent-plugin-config-format failed'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ fluent-plugin-config-format --verbose -f txt output null
+ grep 'flush_at_shutdown: bool'
 flush_at_shutdown: bool: (nil)
+ CHECK_RESULT 0 0 0 'Check fluent-plugin-config-format --verbose failed'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Check fluent-plugin-config-format --verbose failed'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ fluent-plugin-config-format -c output null
+ grep -e '\*\*flush_at_shutdown\*\*'
* **flush_at_shutdown** () (optional): 
+ CHECK_RESULT 0 0 0 'Check fluent-plugin-config-format -c failed'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Check fluent-plugin-config-format -c failed'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ fluent-plugin-config-format --compact output null
+ grep -e '\*\*flush_at_shutdown\*\*'
* **flush_at_shutdown** () (optional): 
+ CHECK_RESULT 0 0 0 'Check fluent-plugin-config-format --compact failed'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Check fluent-plugin-config-format --compact failed'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ fluent-plugin-config-format -f json output null
+ grep '"chunk_keys": {'
      "chunk_keys": {
      "chunk_keys": {
+ CHECK_RESULT 0 0 0 'Check fluent-plugin-config-format -f failed'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Check fluent-plugin-config-format -f failed'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ fluent-plugin-config-format --format json output null
+ grep '"chunk_keys": {'
      "chunk_keys": {
      "chunk_keys": {
+ CHECK_RESULT 0 0 0 'Check fluent-plugin-config-format --format failed'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Check fluent-plugin-config-format --format failed'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ fluent-plugin-config-format -t output null
+ grep '|chunk_limit_size|'
|chunk_limit_size| (optional)||`10240`|
+ CHECK_RESULT 0 0 0 'Check fluent-plugin-config-format -t failed'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Check fluent-plugin-config-format -t failed'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ fluent-plugin-config-format --table output null
+ grep '|chunk_limit_size|'
|chunk_limit_size| (optional)||`10240`|
+ CHECK_RESULT 0 0 0 'Check fluent-plugin-config-format --table failed'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Check fluent-plugin-config-format --table failed'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ fluent-plugin-config-format output loki -p loki/gems/fluent-plugin-loki-0.3.0/lib/fluent/plugin/
+ grep 'Available values: yajl, json'
Available values: yajl, json
+ CHECK_RESULT 0 0 0 'Check fluent-plugin-config-format -p failed'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Check fluent-plugin-config-format -p failed'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ fluent-plugin-config-format output loki --plugin loki/gems/fluent-plugin-loki-0.3.0/lib/fluent/plugin/
+ grep 'Available values: yajl, json'
Available values: yajl, json
+ CHECK_RESULT 0 0 0 'Check fluent-plugin-config-format --plugin failed'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Check fluent-plugin-config-format --plugin failed'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ fluent-plugin-config-format -I ./lib/gems/aws-eventstream-1.2.0/lib/ -r aws-eventstream output null
* See also: [Output Plugin Overview](https://docs.fluentd.org/v/1.0/output#overview)

## Fluent::Plugin::NullOutput

### never_flush (bool) (optional)

The parameter for testing to simulate output plugin which never succeed to flush.


### \<buffer\> section (optional) (multiple)

#### chunk_keys () (optional)



Default value: `["tag"]`.

#### flush_at_shutdown () (optional)



Default value: `true`.

#### chunk_limit_size () (optional)



Default value: `10240`.



+ CHECK_RESULT 0 0 0 'Check fluent-plugin-config-format -I failed'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Check fluent-plugin-config-format -I failed'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ fluent-plugin-config-format -I ./lib/gems/aws-eventstream-1.2.0/lib/ -r aws-eventstream output null
* See also: [Output Plugin Overview](https://docs.fluentd.org/v/1.0/output#overview)

## Fluent::Plugin::NullOutput

### never_flush (bool) (optional)

The parameter for testing to simulate output plugin which never succeed to flush.


### \<buffer\> section (optional) (multiple)

#### chunk_keys () (optional)



Default value: `["tag"]`.

#### flush_at_shutdown () (optional)



Default value: `true`.

#### chunk_limit_size () (optional)



Default value: `10240`.



+ CHECK_RESULT 0 0 0 'Check fluent-plugin-config-format -r failed'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Check fluent-plugin-config-format -r failed'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ LOG_INFO 'End to run test.'
+ message='End to run test.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'End to run test.'
Wed Jun 28 13:56:43 2023 - INFO  - End to run test.
+ CASE_RESULT 0
+ case_re=0
+ test -z ''
+ test 0 -eq 0
+ LOG_INFO 'succeed to execute the case.'
+ message='succeed to execute the case.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'succeed to execute the case.'
Wed Jun 28 13:56:43 2023 - INFO  - succeed to execute the case.
+ exec_result=
+ exit 0
+ post_test
+ LOG_INFO 'Start to restore the test environment.'
+ message='Start to restore the test environment.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'Start to restore the test environment.'
Wed Jun 28 13:56:43 2023 - INFO  - Start to restore the test environment.
+ DNF_REMOVE
+ node=1
+ pkg_list=
+ mode=0
+ [[ -z /tmp/tmp0mxodk37 ]]
+ '[' 0 -ne 0 ']'
+ '[' 1 == 0 ']'
+ python3 /root/mugen/libs/locallibs/rpm_manage.py remove --node 1 --pkgs '' --tempfile /tmp/tmp0mxodk37
+ '[' 0 -ne 0 ']'
+ clean_dir
++ ls
+ filelist='common
data
example
lib
loki
oe_test_fluent_binlog_reader.sh
oe_test_fluent_ca_generate.sh
oe_test_fluent_cap_ctl.sh
oe_test_fluent_cat_01.sh
oe_test_fluent_cat_02_2003.sh
oe_test_fluent_cat_02.sh
oe_test_fluent_ctl.sh
oe_test_fluentd_01_2003.sh
oe_test_fluentd_01.sh
oe_test_fluentd_02.sh
oe_test_fluentd_03_2003.sh
oe_test_fluentd_03.sh
oe_test_fluentd_04.sh
oe_test_fluent_debug.sh
oe_test_fluent_gem_01_2003.sh
oe_test_fluent_gem_01.sh
oe_test_fluent_gem_02_2003.sh
oe_test_fluent_gem_02.sh
oe_test_fluent_gem_03_2003.sh
oe_test_fluent_gem_03.sh
oe_test_fluent_plugin_config_format_2003.sh
oe_test_fluent_plugin_config_format.sh
oe_test_fluent_plugin_generate.sh
rubygem-fluentd.md'
+ for filename in ${filelist[@]}
+ [[ -d common ]]
+ [[ ! commonx == \c\o\m\m\o\n\x ]]
+ for filename in ${filelist[@]}
+ [[ -d data ]]
+ [[ ! datax == \c\o\m\m\o\n\x ]]
+ rm -rf data
+ for filename in ${filelist[@]}
+ [[ -d example ]]
+ [[ ! examplex == \c\o\m\m\o\n\x ]]
+ rm -rf example
+ for filename in ${filelist[@]}
+ [[ -d lib ]]
+ [[ ! libx == \c\o\m\m\o\n\x ]]
+ rm -rf lib
+ for filename in ${filelist[@]}
+ [[ -d loki ]]
+ [[ ! lokix == \c\o\m\m\o\n\x ]]
+ rm -rf loki
+ for filename in ${filelist[@]}
+ [[ -d oe_test_fluent_binlog_reader.sh ]]
+ for filename in ${filelist[@]}
+ [[ -d oe_test_fluent_ca_generate.sh ]]
+ for filename in ${filelist[@]}
+ [[ -d oe_test_fluent_cap_ctl.sh ]]
+ for filename in ${filelist[@]}
+ [[ -d oe_test_fluent_cat_01.sh ]]
+ for filename in ${filelist[@]}
+ [[ -d oe_test_fluent_cat_02_2003.sh ]]
+ for filename in ${filelist[@]}
+ [[ -d oe_test_fluent_cat_02.sh ]]
+ for filename in ${filelist[@]}
+ [[ -d oe_test_fluent_ctl.sh ]]
+ for filename in ${filelist[@]}
+ [[ -d oe_test_fluentd_01_2003.sh ]]
+ for filename in ${filelist[@]}
+ [[ -d oe_test_fluentd_01.sh ]]
+ for filename in ${filelist[@]}
+ [[ -d oe_test_fluentd_02.sh ]]
+ for filename in ${filelist[@]}
+ [[ -d oe_test_fluentd_03_2003.sh ]]
+ for filename in ${filelist[@]}
+ [[ -d oe_test_fluentd_03.sh ]]
+ for filename in ${filelist[@]}
+ [[ -d oe_test_fluentd_04.sh ]]
+ for filename in ${filelist[@]}
+ [[ -d oe_test_fluent_debug.sh ]]
+ for filename in ${filelist[@]}
+ [[ -d oe_test_fluent_gem_01_2003.sh ]]
+ for filename in ${filelist[@]}
+ [[ -d oe_test_fluent_gem_01.sh ]]
+ for filename in ${filelist[@]}
+ [[ -d oe_test_fluent_gem_02_2003.sh ]]
+ for filename in ${filelist[@]}
+ [[ -d oe_test_fluent_gem_02.sh ]]
+ for filename in ${filelist[@]}
+ [[ -d oe_test_fluent_gem_03_2003.sh ]]
+ for filename in ${filelist[@]}
+ [[ -d oe_test_fluent_gem_03.sh ]]
+ for filename in ${filelist[@]}
+ [[ -d oe_test_fluent_plugin_config_format_2003.sh ]]
+ for filename in ${filelist[@]}
+ [[ -d oe_test_fluent_plugin_config_format.sh ]]
+ for filename in ${filelist[@]}
+ [[ -d oe_test_fluent_plugin_generate.sh ]]
+ for filename in ${filelist[@]}
+ [[ -d rubygem-fluentd.md ]]
+ LOG_INFO 'End to restore the test environment.'
+ message='End to restore the test environment.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'End to restore the test environment.'
Wed Jun 28 13:56:46 2023 - INFO  - End to restore the test environment.

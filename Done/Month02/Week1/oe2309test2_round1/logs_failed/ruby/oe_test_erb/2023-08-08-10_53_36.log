+ source ../common/common_ruby.sh
++ source /root/mugen/libs/locallibs/common_lib.sh
+++ python3 --version
+++ '[' 0 -eq 0 ']'
+++ source /root/mugen/libs/locallibs/common_lib_python.sh
+ main
++ type -t post_test
+ '[' -n function ']'
+ trap post_test EXIT INT HUP TERM
+ rpm -qa
+ grep expect
++ type -t config_params
+ '[' -n '' ']'
++ type -t pre_test
+ '[' -n function ']'
+ pre_test
+ LOG_INFO 'Start to prepare the test environment.'
+ message='Start to prepare the test environment.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'Start to prepare the test environment.'
Tue Aug  8 10:53:44 2023 - INFO  - Start to prepare the test environment.
+ DNF_INSTALL ruby
+ pkgs=ruby
+ node=1
+ '[' -z '' ']'
+ tmpfile=
++ python3 /root/mugen/libs/locallibs/rpm_manage.py install --pkgs ruby --node 1 --tempfile ''
+ tmpfile2=/tmp/tmpeodjzvzd
+ '[' -z '' ']'
+ tmpfile=/tmp/tmpeodjzvzd
+ LOG_INFO 'Finish preparing the test environment.'
+ message='Finish preparing the test environment.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'Finish preparing the test environment.'
Tue Aug  8 10:55:13 2023 - INFO  - Finish preparing the test environment.
++ type -t run_test
+ '[' -n function ']'
+ run_test
+ LOG_INFO 'Start to run test.'
+ message='Start to run test.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'Start to run test.'
Tue Aug  8 10:55:14 2023 - INFO  - Start to run test.
+ erb --help
+ grep -E 'erb|-' helpinfo
erb [switches] [var=value...] [inputfile]
  -x               print ruby script
  -n               print ruby script with line number
  -v               enable verbose mode
  -d               set $DEBUG to true
  -r library       load a library
  -E ex[:in]       set default external/internal encodings
  -U               set default encoding to UTF-8
  -T trim_mode     specify trim_mode (0..2, -)
  -P               disable ruby code evaluation for lines beginning with %
+ CHECK_RESULT 0
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log=
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ erb --version
+ grep 'erb.*[0-9]'
+ CHECK_RESULT 1
+ actual_result=1
+ expect_result=0
+ mode=0
+ error_log=
+ exit_mode=0
+ '[' -z 1 ']'
+ '[' 0 -eq 0 ']'
+ test 1x '!=' 0x
+ test -n ''
+ (( exec_result++ ))
+ LOG_ERROR 'oe_test_erb.sh line 34'
+ message='oe_test_erb.sh line 34'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level error --message 'oe_test_erb.sh line 34'
Tue Aug  8 10:55:26 2023 - ERROR - oe_test_erb.sh line 34
+ '[' 0 -eq 1 ']'
+ return 0
+ erb -x example1.erb
+ grep _erbout
_erbout = +''; _erbout.<< "<?xml version=\"1.0\" ?>\n".freeze
;  require 'prime' -; _erbout.<< "\n".freeze
; _erbout.<< "<erb-example>\n".freeze
; _erbout.<< "    <calc>".freeze; _erbout.<<(( 1+1 ).to_s); _erbout.<< "</calc>\n".freeze
; _erbout.<< "    <var>".freeze; _erbout.<<(( __FILE__ ).to_s); _erbout.<< "</var>\n".freeze
; _erbout.<< "    <library>".freeze; _erbout.<<(( Prime.each(10).to_a.join(", ") ).to_s); _erbout.<< "</library>\n".freeze
; _erbout.<< "</erb-example>".freeze; _erbout
+ CHECK_RESULT 0
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log=
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ erb -x -n example1.erb
+ grep '\<[0-9]\>'
  1 #coding:UTF-8
  2 _erbout = +''; _erbout.<< "<?xml version=\"1.0\" ?>\n".freeze
  3 ;  require 'prime' -; _erbout.<< "\n".freeze
  4 ; _erbout.<< "<erb-example>\n".freeze
  5 ; _erbout.<< "    <calc>".freeze; _erbout.<<(( 1+1 ).to_s); _erbout.<< "</calc>\n".freeze
  6 ; _erbout.<< "    <var>".freeze; _erbout.<<(( __FILE__ ).to_s); _erbout.<< "</var>\n".freeze
  7 ; _erbout.<< "    <library>".freeze; _erbout.<<(( Prime.each(10).to_a.join(", ") ).to_s); _erbout.<< "</library>\n".freeze
  8 ; _erbout.<< "</erb-example>".freeze; _erbout
+ CHECK_RESULT 0
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log=
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ erb -x -v example1.erb
+ grep _erbout
_erbout = +''; _erbout.<< "<?xml version=\"1.0\" ?>\n".freeze
;  require 'prime' -; _erbout.<< "\n".freeze
; _erbout.<< "<erb-example>\n".freeze
; _erbout.<< "    <calc>".freeze; _erbout.<<(( 1+1 ).to_s); _erbout.<< "</calc>\n".freeze
; _erbout.<< "    <var>".freeze; _erbout.<<(( __FILE__ ).to_s); _erbout.<< "</var>\n".freeze
; _erbout.<< "    <library>".freeze; _erbout.<<(( Prime.each(10).to_a.join(", ") ).to_s); _erbout.<< "</library>\n".freeze
; _erbout.<< "</erb-example>".freeze; _erbout
+ CHECK_RESULT 0
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log=
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ erb -x -d example1.erb
+ grep -E 'require|erbout'
_erbout = +''; _erbout.<< "<?xml version=\"1.0\" ?>\n".freeze
;  require 'prime' -; _erbout.<< "\n".freeze
; _erbout.<< "<erb-example>\n".freeze
; _erbout.<< "    <calc>".freeze; _erbout.<<(( 1+1 ).to_s); _erbout.<< "</calc>\n".freeze
; _erbout.<< "    <var>".freeze; _erbout.<<(( __FILE__ ).to_s); _erbout.<< "</var>\n".freeze
; _erbout.<< "    <library>".freeze; _erbout.<<(( Prime.each(10).to_a.join(", ") ).to_s); _erbout.<< "</library>\n".freeze
; _erbout.<< "</erb-example>".freeze; _erbout
+ CHECK_RESULT 0
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log=
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ erb -r prime -T - example2.erb
+ grep -E '<|>'
<?xml version="1.0" ?>
<erb-example>
    <calc>2</calc>
    <var>example2.erb</var>
    <library>2, 3, 5, 7</library>
</erb-example>
+ CHECK_RESULT 0
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log=
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ erb -S 0 -x example1.erb
+ grep freeze
warning: -S option of erb command is deprecated. Please do not use this.
/usr/share/gems/gems/erb-2.2.3/libexec/erb:134: warning: Passing safe_level with the 2nd argument of ERB.new is deprecated. Do not use it, and specify other arguments as keyword arguments.
_erbout = +''; _erbout.<< "<?xml version=\"1.0\" ?>\n".freeze
;  require 'prime' -; _erbout.<< "\n".freeze
; _erbout.<< "<erb-example>\n".freeze
; _erbout.<< "    <calc>".freeze; _erbout.<<(( 1+1 ).to_s); _erbout.<< "</calc>\n".freeze
; _erbout.<< "    <var>".freeze; _erbout.<<(( __FILE__ ).to_s); _erbout.<< "</var>\n".freeze
; _erbout.<< "    <library>".freeze; _erbout.<<(( Prime.each(10).to_a.join(", ") ).to_s); _erbout.<< "</library>\n".freeze
; _erbout.<< "</erb-example>".freeze; _erbout
+ CHECK_RESULT 0
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log=
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ erb -E external -x example1.erb
+ grep -E 'freeze|erbout'
_erbout = +''; _erbout.<< "<?xml version=\"1.0\" ?>\n".freeze
;  require 'prime' -; _erbout.<< "\n".freeze
; _erbout.<< "<erb-example>\n".freeze
; _erbout.<< "    <calc>".freeze; _erbout.<<(( 1+1 ).to_s); _erbout.<< "</calc>\n".freeze
; _erbout.<< "    <var>".freeze; _erbout.<<(( __FILE__ ).to_s); _erbout.<< "</var>\n".freeze
; _erbout.<< "    <library>".freeze; _erbout.<<(( Prime.each(10).to_a.join(", ") ).to_s); _erbout.<< "</library>\n".freeze
; _erbout.<< "</erb-example>".freeze; _erbout
+ CHECK_RESULT 0
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log=
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ erb -U -x example1.erb
+ grep erbout
_erbout = +''; _erbout.<< "<?xml version=\"1.0\" ?>\n".freeze
;  require 'prime' -; _erbout.<< "\n".freeze
; _erbout.<< "<erb-example>\n".freeze
; _erbout.<< "    <calc>".freeze; _erbout.<<(( 1+1 ).to_s); _erbout.<< "</calc>\n".freeze
; _erbout.<< "    <var>".freeze; _erbout.<<(( __FILE__ ).to_s); _erbout.<< "</var>\n".freeze
; _erbout.<< "    <library>".freeze; _erbout.<<(( Prime.each(10).to_a.join(", ") ).to_s); _erbout.<< "</library>\n".freeze
; _erbout.<< "</erb-example>".freeze; _erbout
+ CHECK_RESULT 0
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log=
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ erb -T - example1.erb
+ grep -E '<|>'
<?xml version="1.0" ?>
<erb-example>
    <calc>2</calc>
    <var>example1.erb</var>
    <library>2, 3, 5, 7</library>
</erb-example>
+ CHECK_RESULT 0
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log=
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ erb -P -x example1.erb
+ grep erb-example
;  require 'prime' -; _erbout.<< "\n<erb-example>\n    <calc>".freeze
; _erbout.<<(( Prime.each(10).to_a.join(", ") ).to_s); _erbout.<< "</library>\n</erb-example>".freeze
+ CHECK_RESULT 0
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log=
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ LOG_INFO 'End of the test.'
+ message='End of the test.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'End of the test.'
Tue Aug  8 10:56:18 2023 - INFO  - End of the test.
+ CASE_RESULT 0
+ case_re=0
+ test -z 1
+ test 1 -gt 0
+ LOG_ERROR 'failed to execute the case.'
+ message='failed to execute the case.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level error --message 'failed to execute the case.'
Tue Aug  8 10:56:20 2023 - ERROR - failed to execute the case.
+ exit 1
+ post_test
+ LOG_INFO 'Start to restore the test environment.'
+ message='Start to restore the test environment.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'Start to restore the test environment.'
Tue Aug  8 10:56:22 2023 - INFO  - Start to restore the test environment.
+ delete_files
++ ls
++ grep -vE '.sh|.rb|.erb|rakefile|.gemspec'
+ rm -rf helpinfo
+ DNF_REMOVE
+ node=1
+ pkg_list=
+ mode=0
+ [[ -z /tmp/tmpeodjzvzd ]]
+ '[' 0 -ne 0 ']'
+ '[' 1 == 0 ']'
+ python3 /root/mugen/libs/locallibs/rpm_manage.py remove --node 1 --pkgs '' --tempfile /tmp/tmpeodjzvzd
+ '[' 0 -ne 0 ']'
+ LOG_INFO 'Finish restoring the test environment.'
+ message='Finish restoring the test environment.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'Finish restoring the test environment.'
Tue Aug  8 10:56:50 2023 - INFO  - Finish restoring the test environment.

+ source ./common/disk_lib.sh
++ source /root/mugen/libs/locallibs/common_lib.sh
+++ python3 --version
+++ '[' 0 -eq 0 ']'
+++ source /root/mugen/libs/locallibs/common_lib_python.sh
+ main
++ type -t post_test
+ '[' -n function ']'
+ trap post_test EXIT INT HUP TERM
+ rpm -qa
+ grep expect
++ type -t config_params
+ '[' -n '' ']'
++ type -t pre_test
+ '[' -n function ']'
+ pre_test
+ LOG_INFO 'Start to prepare the test environment!'
+ message='Start to prepare the test environment!'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'Start to prepare the test environment!'
Mon Jun  5 18:05:34 2023 - INFO  - Start to prepare the test environment!
+ DNF_INSTALL lvm2
+ pkgs=lvm2
+ node=1
+ '[' -z '' ']'
+ tmpfile=
++ python3 /root/mugen/libs/locallibs/rpm_manage.py install --pkgs lvm2 --node 1 --tempfile ''
Mon Jun  5 18:05:46 2023 - INFO  - pkgs:(lvm2) is already installed
+ tmpfile2=
+ '[' -z '' ']'
+ tmpfile=
+ check_free_disk
++ TEST_DISK
++ id=1
++ python3 /root/mugen/libs/locallibs/get_test_device.py --device disk --node 1
+ disks=vdb
+ disk_list=($disks)
+ local_disk=vdb
+ local_disk1=
+ local_disk2=
+ local_disk3=
+ LOG_INFO 'End to prepare the test environment!'
+ message='End to prepare the test environment!'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'End to prepare the test environment!'
Mon Jun  5 18:05:58 2023 - INFO  - End to prepare the test environment!
++ type -t run_test
+ '[' -n function ']'
+ run_test
+ LOG_INFO 'Start executing testcase!'
+ message='Start executing testcase!'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'Start executing testcase!'
Mon Jun  5 18:05:59 2023 - INFO  - Start executing testcase!
+ pvcreate -y /dev/vdb
  Physical volume "/dev/vdb" successfully created.
+ CHECK_RESULT 0 0 0 'create PV failed'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='create PV failed'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ grep /dev/vdb
+ pvs
  /dev/vdb      lvm2 ---  500.00m 500.00m
+ CHECK_RESULT 0 0 0 'create PV failed'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='create PV failed'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ vgcreate test /dev/vdb
  Volume group "test" successfully created
+ CHECK_RESULT 0 0 0 'create VG failed'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='create VG failed'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ vgdisplay
+ grep test
+ grep 'VG Name'
  VG Name               test
+ CHECK_RESULT 0 0 0 'create VG failed'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='create VG failed'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ vgexport test
+ grep 'successfully exported'
  Volume group "test" successfully exported
+ CHECK_RESULT 0 0 0 'failed to export VG test'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='failed to export VG test'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ vgimport test
  Volume group "test" successfully imported
+ vgexport -y test
+ grep 'successfully exported'
  Volume group "test" successfully exported
+ CHECK_RESULT 0 0 0 'failed to export VG test'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='failed to export VG test'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ vgimport test
  Volume group "test" successfully imported
+ grep 'successfully exported'
+ vgexport --reportformat basic test
  Volume group "test" successfully exported
+ CHECK_RESULT 0 0 0 'failed to export VG test --reportformat basic'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='failed to export VG test --reportformat basic'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ vgimport test
  Volume group "test" successfully imported
+ vgexport --reportformat json test
+ grep 'successfully exported'
  Volume group "test" successfully exported
+ CHECK_RESULT 0 0 0 'failed to export VG test --reportformat basic'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='failed to export VG test --reportformat basic'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ vgimport test
  Volume group "test" successfully imported
+ vgexport -v test
+ grep 'successfully exported'
  Archiving volume group "test" metadata (seqno 9).
  Creating volume group backup "/etc/lvm/backup/test" (seqno 10).
  Volume group "test" successfully exported
+ CHECK_RESULT 0 0 0 'failed to export VG test -v'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='failed to export VG test -v'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ vgimport test
  Volume group "test" successfully imported
+ vgexport -t test
+ grep 'successfully exported'
  TEST MODE: Metadata will NOT be updated and volumes will not be (de)activated.
  Volume group "test" successfully exported
+ CHECK_RESULT 0 0 0 'failed to export VG test -t'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='failed to export VG test -t'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ vgimport test
  Volume group "test" is not exported
+ vgexport -q test
+ grep 'successfully exported'
  Volume group "test" successfully exported
+ CHECK_RESULT 0 0 0 'failed to export VG test -q'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='failed to export VG test -q'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ vgexport --help
+ grep 'Unregister volume group(s) from the system'
  vgexport - Unregister volume group(s) from the system
+ CHECK_RESULT 0 0 0 'vgexport --help failed'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='vgexport --help failed'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ vgextend --version
+ grep 'LVM version'
  LVM version:     2.03.18(2)-git (2022-11-10)
+ CHECK_RESULT 0 0 0 'failed to test vgextend version'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='failed to test vgextend version'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ vgimport test
  Volume group "test" successfully imported
+ vgexport -d test
+ grep 'successfully exported'
  Volume group "test" successfully exported
+ CHECK_RESULT 0 0 0 'failed to export VG test -d'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='failed to export VG test -d'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ LOG_INFO 'End executing testcase!'
+ message='End executing testcase!'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'End executing testcase!'
Mon Jun  5 18:06:11 2023 - INFO  - End executing testcase!
+ CASE_RESULT 0
+ case_re=0
+ test -z ''
+ test 0 -eq 0
+ LOG_INFO 'succeed to execute the case.'
+ message='succeed to execute the case.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'succeed to execute the case.'
Mon Jun  5 18:06:11 2023 - INFO  - succeed to execute the case.
+ exec_result=
+ exit 0
+ post_test
+ LOG_INFO 'Start environment cleanup.'
+ message='Start environment cleanup.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'Start environment cleanup.'
Mon Jun  5 18:06:12 2023 - INFO  - Start environment cleanup.
+ vgimport test
  Volume group "test" successfully imported
+ vgremove -f test
  Volume group "test" successfully removed
+ pvremove -f /dev/vdb
  Labels on physical volume "/dev/vdb" successfully wiped.
+ DNF_REMOVE
+ node=1
+ pkg_list=
+ mode=0
+ [[ -z '' ]]
+ [[ -z '' ]]
+ LOG_WARN 'no thing to do.'
+ message='no thing to do.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level warn --message 'no thing to do.'
Mon Jun  5 18:06:15 2023 - WARN  - no thing to do.
+ return 0
+ LOG_INFO 'Finish environment cleanup.'
+ message='Finish environment cleanup.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'Finish environment cleanup.'
Mon Jun  5 18:06:16 2023 - INFO  - Finish environment cleanup.

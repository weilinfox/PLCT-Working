+ source /root/mugen/libs/locallibs/common_lib.sh
++ python3 --version
++ '[' 0 -eq 0 ']'
++ source /root/mugen/libs/locallibs/common_lib_python.sh
+ main
++ type -t post_test
+ '[' -n function ']'
+ trap post_test EXIT INT HUP TERM
+ rpm -qa
+ grep expect
++ type -t config_params
+ '[' -n '' ']'
++ type -t pre_test
+ '[' -n function ']'
+ pre_test
+ LOG_INFO 'Start to prepare the database config.'
+ message='Start to prepare the database config.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'Start to prepare the database config.'
Fri Sep 22 04:46:14 2023 - INFO  - Start to prepare the database config.
+ DNF_INSTALL libreswan
+ pkgs=libreswan
+ node=1
+ '[' -z '' ']'
+ tmpfile=
++ python3 /root/mugen/libs/locallibs/rpm_manage.py install --pkgs libreswan --node 1 --tempfile ''
Fri Sep 22 04:46:21 2023 - INFO  - pkgs:(libreswan) is already installed
+ tmpfile2=
+ '[' -z '' ']'
+ tmpfile=
+ ipsec restart
Redirecting to: systemctl restart ipsec.service
+ LOG_INFO 'End to prepare the database config.'
+ message='End to prepare the database config.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'End to prepare the database config.'
Fri Sep 22 04:46:27 2023 - INFO  - End to prepare the database config.
++ type -t run_test
+ '[' -n function ']'
+ run_test
+ LOG_INFO 'Start to run test.'
+ message='Start to run test.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'Start to run test.'
Fri Sep 22 04:46:28 2023 - INFO  - Start to run test.
+ ipsec algparse ike
+ CHECK_RESULT 0 0 0 'Check ipsec algparse ike failed.'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Check ipsec algparse ike failed.'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ ipsec algparse esp
+ CHECK_RESULT 0 0 0 'Check ipsec algparse esp failed.'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Check ipsec algparse esp failed.'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ ipsec algparse ah
+ CHECK_RESULT 0 0 0 'Check ipsec algparse ah failed.'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Check ipsec algparse ah failed.'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ ipsec algparse -tp
algparse: ignoring ESP DH algorithm MODP2048 as PFS policy is disabled
algparse: ignoring ESP DH algorithm MODP2048 as PFS policy is disabled
algparse: ignoring ESP DH algorithm MODP2048 as PFS policy is disabled
algparse: ignoring ESP DH algorithm MODP1536 as PFS policy is disabled
algparse: ignoring ESP DH algorithm MODP2048 as PFS policy is disabled
algparse: ignoring ESP DH algorithm DH21 as PFS policy is disabled
algparse: ignoring ESP DH algorithm DH21 as PFS policy is disabled
algparse: ignoring ESP DH algorithm MODP8192 as PFS policy is disabled
algparse: ignoring ESP DH algorithm MODP8192 as PFS policy is disabled
algparse: ignoring ESP DH algorithm MODP8192 as PFS policy is disabled
algparse: ignoring ESP DH algorithm MODP8192 as PFS policy is disabled
algparse: ignoring ESP DH algorithm MODP8192 as PFS policy is disabled
algparse: ignoring ESP DH algorithm MODP8192 as PFS policy is disabled
algparse: ignoring ESP DH algorithm MODP8192 as PFS policy is disabled
algparse: ignoring ESP DH algorithm MODP8192 as PFS policy is disabled
algparse: ignoring redundant ESP DH algorithm NONE as PFS policy is disabled
algparse: ignoring redundant ESP DH algorithm NONE as PFS policy is disabled
algparse: ignoring redundant ESP DH algorithm NONE as PFS policy is disabled
algparse: ignoring ESP DH algorithm MODP2048 as PFS policy is disabled
algparse: ignoring redundant ESP DH algorithm NONE as PFS policy is disabled
algparse: ignoring redundant ESP DH algorithm NONE as PFS policy is disabled
algparse: ignoring ESP DH algorithm MODP8192 as PFS policy is disabled
algparse: ignoring ESP DH algorithm MODP8192 as PFS policy is disabled
algparse: ignoring ESP DH algorithm MODP8192 as PFS policy is disabled
algparse: ignoring ESP DH algorithm MODP8192 as PFS policy is disabled
algparse: ignoring ESP DH algorithm MODP8192 as PFS policy is disabled
algparse: ignoring ESP DH algorithm MODP8192 as PFS policy is disabled
algparse: ignoring ESP DH algorithm MODP8192 as PFS policy is disabled
algparse: ignoring ESP DH algorithm MODP8192 as PFS policy is disabled
algparse: ignoring ESP DH algorithm MODP8192 as PFS policy is disabled
algparse: ignoring ESP DH algorithm MODP8192 as PFS policy is disabled
algparse: ignoring ESP DH algorithm MODP8192 as PFS policy is disabled
algparse: ignoring ESP DH algorithm MODP2048 as PFS policy is disabled
algparse: ignoring AH DH algorithm MODP2048 as PFS policy is disabled
algparse: ignoring redundant AH DH algorithm NONE as PFS policy is disabled
algparse: ignoring redundant AH DH algorithm NONE as PFS policy is disabled
algparse: ignoring AH DH algorithm MODP8192 as PFS policy is disabled
algparse: discarding duplicate IKE encryption algorithm AES_CBC
algparse: discarding duplicate IKE PRF algorithm HMAC_SHA1
algparse: discarding duplicate IKE DH algorithm MODP8192
algparse: discarding duplicate IKE encryption algorithm AES_CBC
algparse: discarding duplicate IKE PRF algorithm HMAC_SHA1
algparse: discarding duplicate IKE DH algorithm MODP8192
algparse: discarding duplicate IKE encryption algorithm AES_CBC
algparse: discarding duplicate IKE PRF algorithm HMAC_SHA1
algparse: discarding duplicate IKE DH algorithm MODP8192
algparse: discarding duplicate IKE encryption algorithm AES_CBC
algparse: discarding duplicate IKE PRF algorithm HMAC_SHA1
algparse: discarding duplicate IKE DH algorithm MODP8192
algparse: discarding duplicate IKE encryption algorithm AES_CBC_128
algparse: discarding duplicate IKE encryption algorithm AES_CBC_256
algparse: discarding duplicate IKE encryption algorithm AES_CBC_256
+ CHECK_RESULT 0 0 0 'Check ipsec algparse -tp failed.'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Check ipsec algparse -tp failed.'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ ipsec algparse -ta
+ CHECK_RESULT 0 0 0 'Check ipsec algparse -ta failed.'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Check ipsec algparse -ta failed.'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ ipsec algparse -v2 'ike=aes_gcm-none-sha2;modp2048'
+ CHECK_RESULT 0 0 0 'Check ipsec algparse  -v2 '\''ike=aes_gcm-none-sha2;modp2048'\'' failed.'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Check ipsec algparse  -v2 '\''ike=aes_gcm-none-sha2;modp2048'\'' failed.'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ ipsec algparse -v1
+ CHECK_RESULT 0 0 0 'Check ipsec algparse -v1 failed.'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Check ipsec algparse -v1 failed.'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ ipsec algparse -pfs
+ CHECK_RESULT 0 0 0 'Check ipsec algparse -pfs failed.'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Check ipsec algparse -pfs failed.'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ ipsec algparse -P testpwd
+ CHECK_RESULT 0 0 0 'Check ipsec algparse -P testpwd failed.'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Check ipsec algparse -P testpwd failed.'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ ipsec algparse -v
algparse: Encryption algorithms:
algparse:   AES_CCM_16         {256,192,*128} IKEv1:     ESP     IKEv2:     ESP     FIPS              aes_ccm, aes_ccm_c
algparse:   AES_CCM_12         {256,192,*128} IKEv1:     ESP     IKEv2:     ESP     FIPS              aes_ccm_b
algparse:   AES_CCM_8          {256,192,*128} IKEv1:     ESP     IKEv2:     ESP     FIPS              aes_ccm_a
algparse:   3DES_CBC           [*192]         IKEv1: IKE ESP     IKEv2: IKE ESP     FIPS NSS(CBC)     3des
algparse:   CAMELLIA_CTR       {256,192,*128} IKEv1:     ESP     IKEv2:     ESP                      
algparse:   CAMELLIA_CBC       {256,192,*128} IKEv1: IKE ESP     IKEv2: IKE ESP          NSS(CBC)     camellia
algparse:   AES_GCM_16         {256,192,*128} IKEv1:     ESP     IKEv2: IKE ESP     FIPS NSS(GCM)     aes_gcm, aes_gcm_c
algparse:   AES_GCM_12         {256,192,*128} IKEv1:     ESP     IKEv2: IKE ESP     FIPS NSS(GCM)     aes_gcm_b
algparse:   AES_GCM_8          {256,192,*128} IKEv1:     ESP     IKEv2: IKE ESP     FIPS NSS(GCM)     aes_gcm_a
algparse:   AES_CTR            {256,192,*128} IKEv1: IKE ESP     IKEv2: IKE ESP     FIPS NSS(CTR)     aesctr
algparse:   AES_CBC            {256,192,*128} IKEv1: IKE ESP     IKEv2: IKE ESP     FIPS NSS(CBC)     aes
algparse:   NULL_AUTH_AES_GMAC {256,192,*128} IKEv1:     ESP     IKEv2:     ESP     FIPS              aes_gmac
algparse:   NULL               []             IKEv1:     ESP     IKEv2:     ESP                      
algparse:   CHACHA20_POLY1305  [*256]         IKEv1:             IKEv2: IKE ESP          NSS(AEAD)    chacha20poly1305
algparse: Hash algorithms:
algparse:   MD5                               IKEv1: IKE         IKEv2:                  NSS         
algparse:   SHA1                              IKEv1: IKE         IKEv2: IKE         FIPS NSS          sha
algparse:   SHA2_256                          IKEv1: IKE         IKEv2: IKE         FIPS NSS          sha2, sha256
algparse:   SHA2_384                          IKEv1: IKE         IKEv2: IKE         FIPS NSS          sha384
algparse:   SHA2_512                          IKEv1: IKE         IKEv2: IKE         FIPS NSS          sha512
algparse:   IDENTITY                          IKEv1:             IKEv2:             FIPS             
algparse: PRF algorithms:
algparse:   HMAC_MD5                          IKEv1: IKE         IKEv2: IKE              native(HMAC) md5
algparse:   HMAC_SHA1                         IKEv1: IKE         IKEv2: IKE         FIPS NSS          sha, sha1
algparse:   HMAC_SHA2_256                     IKEv1: IKE         IKEv2: IKE         FIPS NSS          sha2, sha256, sha2_256
algparse:   HMAC_SHA2_384                     IKEv1: IKE         IKEv2: IKE         FIPS NSS          sha384, sha2_384
algparse:   HMAC_SHA2_512                     IKEv1: IKE         IKEv2: IKE         FIPS NSS          sha512, sha2_512
algparse:   AES_XCBC                          IKEv1:             IKEv2: IKE              native(XCBC) aes128_xcbc
algparse: Integrity algorithms:
algparse:   HMAC_MD5_96                       IKEv1: IKE ESP AH  IKEv2: IKE ESP AH       native(HMAC) md5, hmac_md5
algparse:   HMAC_SHA1_96                      IKEv1: IKE ESP AH  IKEv2: IKE ESP AH  FIPS NSS          sha, sha1, sha1_96, hmac_sha1
algparse:   HMAC_SHA2_512_256                 IKEv1: IKE ESP AH  IKEv2: IKE ESP AH  FIPS NSS          sha512, sha2_512, sha2_512_256, hmac_sha2_512
algparse:   HMAC_SHA2_384_192                 IKEv1: IKE ESP AH  IKEv2: IKE ESP AH  FIPS NSS          sha384, sha2_384, sha2_384_192, hmac_sha2_384
algparse:   HMAC_SHA2_256_128                 IKEv1: IKE ESP AH  IKEv2: IKE ESP AH  FIPS NSS          sha2, sha256, sha2_256, sha2_256_128, hmac_sha2_256
algparse:   HMAC_SHA2_256_TRUNCBUG            IKEv1:     ESP AH  IKEv2:         AH                   
algparse:   AES_XCBC_96                       IKEv1:     ESP AH  IKEv2: IKE ESP AH       native(XCBC) aes_xcbc, aes128_xcbc, aes128_xcbc_96
algparse:   AES_CMAC_96                       IKEv1:     ESP AH  IKEv2:     ESP AH  FIPS              aes_cmac
algparse:   NONE                              IKEv1:     ESP     IKEv2: IKE ESP     FIPS              null
algparse: DH algorithms:
algparse:   NONE                              IKEv1:             IKEv2: IKE ESP AH  FIPS NSS(MODP)    null, dh0
algparse:   MODP1536                          IKEv1: IKE ESP AH  IKEv2: IKE ESP AH       NSS(MODP)    dh5
algparse:   MODP2048                          IKEv1: IKE ESP AH  IKEv2: IKE ESP AH  FIPS NSS(MODP)    dh14
algparse:   MODP3072                          IKEv1: IKE ESP AH  IKEv2: IKE ESP AH  FIPS NSS(MODP)    dh15
algparse:   MODP4096                          IKEv1: IKE ESP AH  IKEv2: IKE ESP AH  FIPS NSS(MODP)    dh16
algparse:   MODP6144                          IKEv1: IKE ESP AH  IKEv2: IKE ESP AH  FIPS NSS(MODP)    dh17
algparse:   MODP8192                          IKEv1: IKE ESP AH  IKEv2: IKE ESP AH  FIPS NSS(MODP)    dh18
algparse:   DH19                              IKEv1: IKE         IKEv2: IKE ESP AH  FIPS NSS(ECP)     ecp_256, ecp256
algparse:   DH20                              IKEv1: IKE         IKEv2: IKE ESP AH  FIPS NSS(ECP)     ecp_384, ecp384
algparse:   DH21                              IKEv1: IKE         IKEv2: IKE ESP AH  FIPS NSS(ECP)     ecp_521, ecp521
algparse:   DH31                              IKEv1: IKE         IKEv2: IKE ESP AH       NSS(ECP)     curve25519
algparse: IPCOMP algorithms:
algparse:   DEFLATE                           IKEv1:     ESP AH  IKEv2:     ESP AH  FIPS             
algparse:   LZS                               IKEv1:             IKEv2:     ESP AH  FIPS             
algparse:   LZJH                              IKEv1:             IKEv2:     ESP AH  FIPS             
algparse: leak detective found no leaks
+ CHECK_RESULT 0 0 0 'Check ipsec algparse -v failed.'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Check ipsec algparse -v failed.'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ ipsec algparse --verbose
algparse: Encryption algorithms:
algparse:   AES_CCM_16         {256,192,*128} IKEv1:     ESP     IKEv2:     ESP     FIPS              aes_ccm, aes_ccm_c
algparse:   AES_CCM_12         {256,192,*128} IKEv1:     ESP     IKEv2:     ESP     FIPS              aes_ccm_b
algparse:   AES_CCM_8          {256,192,*128} IKEv1:     ESP     IKEv2:     ESP     FIPS              aes_ccm_a
algparse:   3DES_CBC           [*192]         IKEv1: IKE ESP     IKEv2: IKE ESP     FIPS NSS(CBC)     3des
algparse:   CAMELLIA_CTR       {256,192,*128} IKEv1:     ESP     IKEv2:     ESP                      
algparse:   CAMELLIA_CBC       {256,192,*128} IKEv1: IKE ESP     IKEv2: IKE ESP          NSS(CBC)     camellia
algparse:   AES_GCM_16         {256,192,*128} IKEv1:     ESP     IKEv2: IKE ESP     FIPS NSS(GCM)     aes_gcm, aes_gcm_c
algparse:   AES_GCM_12         {256,192,*128} IKEv1:     ESP     IKEv2: IKE ESP     FIPS NSS(GCM)     aes_gcm_b
algparse:   AES_GCM_8          {256,192,*128} IKEv1:     ESP     IKEv2: IKE ESP     FIPS NSS(GCM)     aes_gcm_a
algparse:   AES_CTR            {256,192,*128} IKEv1: IKE ESP     IKEv2: IKE ESP     FIPS NSS(CTR)     aesctr
algparse:   AES_CBC            {256,192,*128} IKEv1: IKE ESP     IKEv2: IKE ESP     FIPS NSS(CBC)     aes
algparse:   NULL_AUTH_AES_GMAC {256,192,*128} IKEv1:     ESP     IKEv2:     ESP     FIPS              aes_gmac
algparse:   NULL               []             IKEv1:     ESP     IKEv2:     ESP                      
algparse:   CHACHA20_POLY1305  [*256]         IKEv1:             IKEv2: IKE ESP          NSS(AEAD)    chacha20poly1305
algparse: Hash algorithms:
algparse:   MD5                               IKEv1: IKE         IKEv2:                  NSS         
algparse:   SHA1                              IKEv1: IKE         IKEv2: IKE         FIPS NSS          sha
algparse:   SHA2_256                          IKEv1: IKE         IKEv2: IKE         FIPS NSS          sha2, sha256
algparse:   SHA2_384                          IKEv1: IKE         IKEv2: IKE         FIPS NSS          sha384
algparse:   SHA2_512                          IKEv1: IKE         IKEv2: IKE         FIPS NSS          sha512
algparse:   IDENTITY                          IKEv1:             IKEv2:             FIPS             
algparse: PRF algorithms:
algparse:   HMAC_MD5                          IKEv1: IKE         IKEv2: IKE              native(HMAC) md5
algparse:   HMAC_SHA1                         IKEv1: IKE         IKEv2: IKE         FIPS NSS          sha, sha1
algparse:   HMAC_SHA2_256                     IKEv1: IKE         IKEv2: IKE         FIPS NSS          sha2, sha256, sha2_256
algparse:   HMAC_SHA2_384                     IKEv1: IKE         IKEv2: IKE         FIPS NSS          sha384, sha2_384
algparse:   HMAC_SHA2_512                     IKEv1: IKE         IKEv2: IKE         FIPS NSS          sha512, sha2_512
algparse:   AES_XCBC                          IKEv1:             IKEv2: IKE              native(XCBC) aes128_xcbc
algparse: Integrity algorithms:
algparse:   HMAC_MD5_96                       IKEv1: IKE ESP AH  IKEv2: IKE ESP AH       native(HMAC) md5, hmac_md5
algparse:   HMAC_SHA1_96                      IKEv1: IKE ESP AH  IKEv2: IKE ESP AH  FIPS NSS          sha, sha1, sha1_96, hmac_sha1
algparse:   HMAC_SHA2_512_256                 IKEv1: IKE ESP AH  IKEv2: IKE ESP AH  FIPS NSS          sha512, sha2_512, sha2_512_256, hmac_sha2_512
algparse:   HMAC_SHA2_384_192                 IKEv1: IKE ESP AH  IKEv2: IKE ESP AH  FIPS NSS          sha384, sha2_384, sha2_384_192, hmac_sha2_384
algparse:   HMAC_SHA2_256_128                 IKEv1: IKE ESP AH  IKEv2: IKE ESP AH  FIPS NSS          sha2, sha256, sha2_256, sha2_256_128, hmac_sha2_256
algparse:   HMAC_SHA2_256_TRUNCBUG            IKEv1:     ESP AH  IKEv2:         AH                   
algparse:   AES_XCBC_96                       IKEv1:     ESP AH  IKEv2: IKE ESP AH       native(XCBC) aes_xcbc, aes128_xcbc, aes128_xcbc_96
algparse:   AES_CMAC_96                       IKEv1:     ESP AH  IKEv2:     ESP AH  FIPS              aes_cmac
algparse:   NONE                              IKEv1:     ESP     IKEv2: IKE ESP     FIPS              null
algparse: DH algorithms:
algparse:   NONE                              IKEv1:             IKEv2: IKE ESP AH  FIPS NSS(MODP)    null, dh0
algparse:   MODP1536                          IKEv1: IKE ESP AH  IKEv2: IKE ESP AH       NSS(MODP)    dh5
algparse:   MODP2048                          IKEv1: IKE ESP AH  IKEv2: IKE ESP AH  FIPS NSS(MODP)    dh14
algparse:   MODP3072                          IKEv1: IKE ESP AH  IKEv2: IKE ESP AH  FIPS NSS(MODP)    dh15
algparse:   MODP4096                          IKEv1: IKE ESP AH  IKEv2: IKE ESP AH  FIPS NSS(MODP)    dh16
algparse:   MODP6144                          IKEv1: IKE ESP AH  IKEv2: IKE ESP AH  FIPS NSS(MODP)    dh17
algparse:   MODP8192                          IKEv1: IKE ESP AH  IKEv2: IKE ESP AH  FIPS NSS(MODP)    dh18
algparse:   DH19                              IKEv1: IKE         IKEv2: IKE ESP AH  FIPS NSS(ECP)     ecp_256, ecp256
algparse:   DH20                              IKEv1: IKE         IKEv2: IKE ESP AH  FIPS NSS(ECP)     ecp_384, ecp384
algparse:   DH21                              IKEv1: IKE         IKEv2: IKE ESP AH  FIPS NSS(ECP)     ecp_521, ecp521
algparse:   DH31                              IKEv1: IKE         IKEv2: IKE ESP AH       NSS(ECP)     curve25519
algparse: IPCOMP algorithms:
algparse:   DEFLATE                           IKEv1:     ESP AH  IKEv2:     ESP AH  FIPS             
algparse:   LZS                               IKEv1:             IKEv2:     ESP AH  FIPS             
algparse:   LZJH                              IKEv1:             IKEv2:     ESP AH  FIPS             
algparse: leak detective found no leaks
+ CHECK_RESULT 0 0 0 'Check ipsec algparse --verbose failed.'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Check ipsec algparse --verbose failed.'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ ipsec algparse --debug
+ CHECK_RESULT 0 0 0 'Check ipsec algparse --debug failed.'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Check ipsec algparse --debug failed.'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ ipsec algparse --impair
+ CHECK_RESULT 0 0 0 'Check ipsec algparse --impair failed.'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Check ipsec algparse --impair failed.'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ ipsec algparse --ignore
+ CHECK_RESULT 0 0 0 'Check ipsec algparse --ignore failed.'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Check ipsec algparse --ignore failed.'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ ipsec algparse -p1
+ CHECK_RESULT 0 0 0 'Check ipsec algparse -p1 failed.'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Check ipsec algparse -p1 failed.'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ ipsec algparse -p2
+ CHECK_RESULT 0 0 0 'Check ipsec algparse -p2 failed.'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Check ipsec algparse -p2 failed.'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ ipsec algparse -h
Usage:

    algparse [ <option> ... ] -tp | -ta | [<protocol>=][<proposal>{,<proposal>}] ...

Parse one or more proposals using the algorithm parser.
Either specify the proposals to be parsed on the command line
(exit non-zero if a proposal is not valid):

    [<protocol>=][<proposals>]
        <protocol>: the 'ike', 'esp' or 'ah' specific parser to use
            if omitted, the proposal is parsed using all three parsers
        <proposals>: a comma separated list of proposals
            if omitted, a default algorithm list is used

or run a pre-defined testsuite (exit non-zero if a test fails):

    -tp: run the proposal testsuite
    -ta: also run the algorithm testsuite

Additional options:

    -v2 | -ikev2: configure for IKEv2 (default)
    -v1 | -ikev1: configure for IKEv1
    -pfs | -pfs=yes | -pfs=no: specify PFS (perfect forward privicy)
         default: no
    -fips | -fips=yes | -fips=no: force NSS's FIPS mode
         default: determined by system environment
    -v --verbose: be more verbose
    --debug: enable debug logging
    --impair: disable all algorithm parser checks
    --ignore: ignore parser errors (or at least some)
    -p1: simple parser
    -p2: complex parser

Examples:

    algparse -v1 ike
        expand the default IKEv1 'ike' algorithm table
        (with IKEv1, this is the default algorithms, with IKEv2 it is not)
    algparse -v2 ike=aes-sha1-dh23
        expand 'aes-sha1-dh23' using the the IKEv2 'ike' parser
+ CHECK_RESULT 0 0 0 'Check ipsec algparse -h failed.'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Check ipsec algparse -h failed.'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ ipsec algparse -h
+ cat testlog
+ grep '\-d \-\-debug'
grep: warning: stray \ before -
grep: warning: stray \ before -
+ CHECK_RESULT 1 1 0 'Check ipsec algparse -h -d deleted failed.'
+ actual_result=1
+ expect_result=1
+ mode=0
+ error_log='Check ipsec algparse -h -d deleted failed.'
+ exit_mode=0
+ '[' -z 1 ']'
+ '[' 0 -eq 0 ']'
+ test 1x '!=' 1x
+ return 0
+ LOG_INFO 'End to run test.'
+ message='End to run test.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'End to run test.'
Fri Sep 22 04:46:32 2023 - INFO  - End to run test.
+ CASE_RESULT 0
+ case_re=0
+ test -z ''
+ test 0 -eq 0
+ LOG_INFO 'succeed to execute the case.'
+ message='succeed to execute the case.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'succeed to execute the case.'
Fri Sep 22 04:46:32 2023 - INFO  - succeed to execute the case.
+ exec_result=
+ exit 0
+ post_test
+ LOG_INFO 'Start to restore the test environment.'
+ message='Start to restore the test environment.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'Start to restore the test environment.'
Fri Sep 22 04:46:33 2023 - INFO  - Start to restore the test environment.
+ rm -f testlog
+ DNF_REMOVE
+ node=1
+ pkg_list=
+ mode=0
+ [[ -z '' ]]
+ [[ -z '' ]]
+ LOG_WARN 'no thing to do.'
+ message='no thing to do.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level warn --message 'no thing to do.'
Fri Sep 22 04:46:33 2023 - WARN  - no thing to do.
+ return 0
+ LOG_INFO 'End to restore the test environment.'
+ message='End to restore the test environment.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'End to restore the test environment.'
Fri Sep 22 04:46:34 2023 - INFO  - End to restore the test environment.

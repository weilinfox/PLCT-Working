+ source /root/mugen/libs/locallibs/common_lib.sh
++ python3 --version
++ '[' 0 -eq 0 ']'
++ source /root/mugen/libs/locallibs/common_lib_python.sh
+ main
++ type -t post_test
+ '[' -n function ']'
+ trap post_test EXIT INT HUP TERM
+ rpm -qa
+ grep expect
++ type -t config_params
+ '[' -n '' ']'
++ type -t pre_test
+ '[' -n function ']'
+ pre_test
+ LOG_INFO 'Start to prepare the test environment.'
+ message='Start to prepare the test environment.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'Start to prepare the test environment.'
Wed Jul  5 02:01:54 2023 - INFO  - Start to prepare the test environment.
+ DNF_INSTALL ocaml
+ pkgs=ocaml
+ node=1
+ '[' -z '' ']'
+ tmpfile=
++ python3 /root/mugen/libs/locallibs/rpm_manage.py install --pkgs ocaml --node 1 --tempfile ''
+ tmpfile2=/tmp/tmpncvilywa
+ '[' -z '' ']'
+ tmpfile=/tmp/tmpncvilywa
+ cp ../example.ml ./
++ rpm -qa ocaml
++ awk -F - '{print $2}'
+ ocaml_version=4.13.1
+ LOG_INFO 'End to prepare the test environment.'
+ message='End to prepare the test environment.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'End to prepare the test environment.'
Wed Jul  5 02:05:19 2023 - INFO  - End to prepare the test environment.
++ type -t run_test
+ '[' -n function ']'
+ run_test
+ LOG_INFO 'Start to run test.'
+ message='Start to run test.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'Start to run test.'
Wed Jul  5 02:05:20 2023 - INFO  - Start to run test.
+ ocamlcp -P a example.ml
+ echo example
+ ocamlprof -f s example.dump
+ grep example
example
+ CHECK_RESULT 0
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log=
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ ocamlprof -instrument -impl example.ml
+ grep OCAML__prof_Profiling
module OCAML__prof_Profiling = Profiling;; let __ocaml_prof_example_cnt = Array.make 000000000 0;; Profiling.counters := ("example", ("fm", __ocaml_prof_example_cnt)) :: !Profiling.counters;; (* 将多个参数合并到一个元组中，但这种方式不能部分求值 *)
  (OCAML__prof_Profiling.incr __ocaml_prof_example_cnt 0; a + b + c) ;;
+ CHECK_RESULT 0
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log=
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ ocamlprof -intf /usr/lib64/ocaml/filename.mli
+ grep string
val current_dir_name : string
val parent_dir_name : string
val dir_sep : string
val concat : string -> string -> string
val is_relative : string -> bool
val is_implicit : string -> bool
val check_suffix : string -> string -> bool
val chop_suffix : string -> string -> string
val chop_suffix_opt: suffix:string -> string -> string option
val extension : string -> string
    string.
val remove_extension : string -> string
val chop_extension : string -> string
val basename : string -> string
val dirname : string -> string
val null : string
val temp_file : ?temp_dir: string -> string -> string -> string
      ?mode: open_flag list -> ?perms: int -> ?temp_dir: string -> string ->
      string -> string * out_channel
val get_temp_dir_name : unit -> string
val set_temp_dir_name : string -> unit
val temp_dir_name : string
val quote : string -> string
       string -> ?stdin:string -> ?stdout:string -> ?stderr:string
              -> string list -> string
    The string [cmd] is the command to call.  The list [args] is
+ CHECK_RESULT 0
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log=
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ ocamlprof -vnum ocamlprof.dump
+ grep 4.13.1
4.13.1
+ CHECK_RESULT 0
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log=
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ ocamlprof -version ocamlprof.dump
+ grep 4.13.1
ocamlprof, version 4.13.1
+ CHECK_RESULT 0
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log=
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ echo example.dump
+ ocamlprof -args tmpprof
+ grep example
example
+ CHECK_RESULT 0
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log=
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ ocamlprof -help
+ grep ocamlprof
Usage: ocamlprof <options> <files>
  -f <file>     Use <file> as dump file (default ocamlprof.dump)
+ CHECK_RESULT 0
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log=
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ LOG_INFO 'End to run test.'
+ message='End to run test.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'End to run test.'
Wed Jul  5 02:05:23 2023 - INFO  - End to run test.
+ CASE_RESULT 0
+ case_re=0
+ test -z ''
+ test 0 -eq 0
+ LOG_INFO 'succeed to execute the case.'
+ message='succeed to execute the case.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'succeed to execute the case.'
Wed Jul  5 02:05:23 2023 - INFO  - succeed to execute the case.
+ exec_result=
+ exit 0
+ post_test
+ LOG_INFO 'Start to restore the test environment.'
+ message='Start to restore the test environment.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'Start to restore the test environment.'
Wed Jul  5 02:05:24 2023 - INFO  - Start to restore the test environment.
+ DNF_REMOVE
+ node=1
+ pkg_list=
+ mode=0
+ [[ -z /tmp/tmpncvilywa ]]
+ '[' 0 -ne 0 ']'
+ '[' 1 == 0 ']'
+ python3 /root/mugen/libs/locallibs/rpm_manage.py remove --node 1 --pkgs '' --tempfile /tmp/tmpncvilywa
+ '[' 0 -ne 0 ']'
+ rm -rf ./example.cmi ./example.cmo ./example.dump ./example.ml a.out ocamlprof.dump example.dump tmpprof
+ LOG_INFO 'End to restore the test environment.'
+ message='End to restore the test environment.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'End to restore the test environment.'
Wed Jul  5 02:05:40 2023 - INFO  - End to restore the test environment.
